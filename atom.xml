<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://annruotai.github.io</id>
    <title>杨三岁</title>
    <updated>2020-04-12T16:44:18.515Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://annruotai.github.io"/>
    <link rel="self" href="https://annruotai.github.io/atom.xml"/>
    <subtitle>做自己喜欢做的事,可是突然之间...</subtitle>
    <logo>https://annruotai.github.io/images/avatar.png</logo>
    <icon>https://annruotai.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 杨三岁</rights>
    <entry>
        <title type="html"><![CDATA[SpringMVC 处理静态资源的方式]]></title>
        <id>https://annruotai.github.io/post/springmvc-chu-li-jing-tai-zi-yuan-de-fang-shi/</id>
        <link href="https://annruotai.github.io/post/springmvc-chu-li-jing-tai-zi-yuan-de-fang-shi/">
        </link>
        <updated>2020-04-12T16:13:36.000Z</updated>
        <content type="html"><![CDATA[<h2 id="一">一</h2>
<p>在web.xml中配置</p>
<pre><code>&lt;servlet-mapping&gt; 
     &lt;servlet-name&gt;default&lt;/servlet-name&gt; 
     &lt;url-pattern&gt;*.jpg&lt;/url-pattern&gt; 
 &lt;/servlet-mapping&gt; 
 &lt;servlet-mapping&gt; 
     &lt;servlet-name&gt;default&lt;/servlet-name&gt; 
    &lt;url-pattern&gt;*.js&lt;/url-pattern&gt; 
 &lt;/servlet-mapping&gt; 
 &lt;servlet-mapping&gt; 
     &lt;servlet-name&gt;default&lt;/servlet-name&gt; 
     &lt;url-pattern&gt;*.css&lt;/url-pattern&gt;  
 &lt;/servlet-mapping&gt; 
    ... 
</code></pre>
<h2 id="二">二</h2>
<p>web.xml中把</p>
<pre><code>&lt;servlet-mapping&gt; 
     &lt;servlet-name&gt;DispatcherServlet&lt;/servlet-name&gt; 
      &lt;url-pattern&gt;/&lt;/url-pattern&gt; 
   &lt;/servlet-mapping&gt; 
变成
&lt;servlet-mapping&gt; 
    &lt;servlet-name&gt;DispatcherServlet&lt;/servlet-name&gt; 
 &lt;!-- 等等其他的 --&gt; 
&lt;url-pattern&gt;*.do&lt;/url-pattern&gt; 
&lt;/servlet-mapping&gt; 
</code></pre>
<h2 id="三">三</h2>
<p>在springmvc.xml中配置</p>
<pre><code>&lt;!--    配置放行静态资源--&gt; 
&lt;mvc:resources mapping=&quot;/resources/**&quot; location=&quot;/resources/&quot;/&gt; 
</code></pre>
<h2 id="四">四</h2>
<p>在springmvc.xml中配置</p>
<pre><code>&lt;mvc:default-servlet-handler /&gt; 
</code></pre>
<p>在springMVC-servlet.xml中配置&lt;mvc:default-servlet-handler /&gt;后，会在Spring MVC上下文中定义一个org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler，它会<br>
对进入DispatcherServlet的URL进行筛查，如果发现是静态资源的请求，就将该请求转由Web应用服务器默认的Servlet处理，如果不是静态资源的请求，才由DispatcherServlet继续处理。</p>
<p>@杨三岁</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[SpringMVC JSR303数据验证]]></title>
        <id>https://annruotai.github.io/post/springmvc-jsr303-shu-ju-yan-zheng-jar-bao/</id>
        <link href="https://annruotai.github.io/post/springmvc-jsr303-shu-ju-yan-zheng-jar-bao/">
        </link>
        <updated>2020-04-12T09:37:19.000Z</updated>
        <content type="html"><![CDATA[<p>①jar包</p>
<pre><code>(spring5.0.8版本的jar)...
(hibernate5.4.0版本)
hibernate-validator-5.4.0.Final.jar
classmate-1.3.1.jar
jboss-logging-3.3.0.Final.jar
validation-api-1.1.0.Final.jar
</code></pre>
<p>②Controller</p>
<pre><code>    @Controller
    public class Jsr303Controller {
        @RequestMapping(&quot;/jsr303&quot;)
        public String jsr303(@Valid Student student , BindingResult result , Model model){
                System.out.println(student);
                if (result.hasErrors()){
                    List&lt;ObjectError&gt; allErrors = result.getAllErrors();
                    model.addAttribute(&quot;errors&quot; , allErrors);
                    for (ObjectError allError : allErrors) {
                    System.out.println(allError.getDefaultMessage());
                    }
                    //有错误转发到错误页面
                    return &quot;error&quot;;
                }
                    //没错误转发到正确页面
                return &quot;success&quot;;
            }
    }
</code></pre>
<p>③Student.java</p>
<pre><code>        public class Student {
                @NotNull(message = &quot;{stuId.NotNull}&quot;)
                @Range(max = 9999,min = 1000,message = &quot;{stuId.Range}&quot;)
                private Integer id;
                @NotNull(message = &quot;{stuName.NotNull}&quot;)
                @Length(max = 4,min = 2,message = &quot;{stuName.Length}&quot;)
                private String name;
                @DateTimeFormat(pattern = &quot;yyyy-MM-dd&quot;)
                @NotNull(message = &quot;{borndate.NotNull}&quot;)
                @Past(message = &quot;{borndate.Past}&quot;)
                private Date borndate;
                .....
        }
</code></pre>
<p>④error.properties</p>
<pre><code>    stuId.NotNull=学生ID不能为空
    stuId.Range=学生ID长度必须是四位
    stuName.NotNull=学生姓名不能为空
    stuName.Length=姓名长度不合法
    borndate.NotNull=出生日期不能为空
    borndate.Past=生日不能大于当前日期
    ```
</code></pre>
<p>⑤springmvc.xml配置</p>
<!--    加载配置文件-->
<pre><code>&lt;bean class=&quot;org.springframework.context.support.ReloadableResourceBundleMessageSource&quot; id=&quot;resourceBundleMessageSource&quot;&gt;
    &lt;property name=&quot;basenames&quot;&gt;
        &lt;list&gt;
            &lt;value&gt;classpath:error&lt;/value&gt;
        &lt;/list&gt;
    &lt;/property&gt;
&lt;/bean&gt;
</code></pre>
<!--   把resourceBundleMessageSource注入到validatorFactoryBean -->
<pre><code>&lt;bean class=&quot;org.springframework.validation.beanvalidation.LocalValidatorFactoryBean&quot; id=&quot;validatorFactoryBean&quot;&gt;
    &lt;property name=&quot;providerClass&quot; value=&quot;org.hibernate.validator.HibernateValidator&quot;/&gt;
    &lt;property name=&quot;validationMessageSource&quot; ref=&quot;resourceBundleMessageSource&quot;/&gt;
&lt;/bean&gt;
</code></pre>
 <!--    注解驱动  注册-->
<pre><code>&lt;mvc:annotation-driven validator=&quot;validatorFactoryBean&quot;/&gt;
```
</code></pre>
<h3 id=""></h3>
<p>⑥页面演示<br>
正确<img src="https://annruotai.github.io/post-images/1586709721148.png" alt="" loading="lazy"><br>
错误<img src="https://annruotai.github.io/post-images/1586709724363.png" alt="" loading="lazy"></p>
<p>@杨三岁</p>
]]></content>
    </entry>
</feed>